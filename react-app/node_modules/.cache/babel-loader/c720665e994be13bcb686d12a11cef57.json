{"ast":null,"code":"import _asyncToGenerator from \"/Users/andrewfava/Desktop/connectd/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/andrewfava/Desktop/connectd/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/andrewfava/Desktop/connectd/react-app/src/components/AddEvent/AddEvent.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\n// import React, {useState} from 'react'\n// import {useDispatch, useSelector} from 'react-redux'\n// import {useHistory} from 'react-router-dom'\n// import {createEvent} from '../../store/event'\n// function AddEvent() {\n//   const user = useSelector(state => state.session)\n//   const dispatch = useDispatch()\n//   const history = useHistory()\n//   const [event_imgs, setImgs] = useState('')\n//   const [title, setTitle] = useState('')\n//   const [event_description, setDescription] = useState('')\n//   const [event_date, setDate] = useState('')\n//   const [event_city, setCity] = useState('')\n//   const [event_state, setState] = useState('')\n//   const [event_zipcode, setZip] = useState('')\n//   const [category, setCategory] = useState('')\n//   const [errors, setErrors] = useState([])\n//   const resetFields = () => {\n//     setImgs('')\n//     setTitle('')\n//     setDescription('')\n//     setDate('')\n//     setCity('')\n//     setState('')\n//     setZip('')\n//     setCategory('')\n//   }\n//   const validateEvent = () => {\n//     const errors = []\n//     if (!event_imgs) errors.push('Please provide a photo')\n//     if (!title) errors.push('Please provide a title')\n//     if (!event_description) errors.push('Please provide a description')\n//     if (!event_date) errors.push('Please provide a date')\n//     if (!event_city) errors.push('Please provide a city')\n//     if (!event_state) errors.push('Please provide a state')\n//     if (!event_zipcode) errors.push('Please provide a zip code')\n//     if (!category) errors.push('Please provide a category')\n//     setErrors(errors)\n//     return errors\n//   }\n//   const handleSubmit = (e) =>  {\n//     e.preventDefault()\n//     const errors = validateEvent()\n//     if(!errors.length){\n//     const event = {\n//       event_imgs,\n//       title,\n//       event_description,\n//       event_date,\n//       event_city: event_city.replace(/\\s+/g, ' ').trim().replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))),\n//       event_state: event_state.replace(/\\s+/g, ' ').trim().replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))),\n//       event_zipcode,\n//       category,\n//       user_id: user.id,\n//       // user_id:1\n//     }\n//     dispatch(createEvent(event))\n//     resetFields()\n//     history.push('/')\n//     }  else {\n//       setErrors(['Failed to create event. Please try again.'])\n//     }\n//   }\n//   return (\n//     <>\n//       <h1>Post a new Event</h1>\n//       <form onSubmit={handleSubmit}>\n//         <ul>\n//           {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n//         </ul>\n//         <div>\n//           <label>Photo Url</label>\n//           <input\n//             type='text'\n//             value={event_imgs}\n//             onChange={(e) => setImgs(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Title</label>\n//           <input\n//             type='text'\n//             value={title}\n//             onChange={(e) => setTitle(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Description</label>\n//           <input\n//             type='text'\n//             value={event_description}\n//             onChange={(e) => setDescription(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Date</label>\n//           <input\n//             type=\"date\"\n//             format=\"YYYY-MM-DD\"\n//             value={event_date}\n//             onChange={(e) => setDate(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>City</label>\n//           <input\n//             type='text'\n//             value={event_city}\n//             onChange={(e) => setCity(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>State</label>\n//           <input\n//             type='text'\n//             value={event_state}\n//             onChange={(e) => setState(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Zip</label>\n//           <input\n//             type='text'\n//             value={event_zipcode}\n//             onChange={(e) => setZip(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Category</label>\n//           <select\n//             value={category}\n//             onChange={(e) => setCategory(e.target.value)}\n//             required\n//           >\n//             <option value=''>--Please choose an option--</option>\n//             <option selected value='Sports'>Sports</option>\n//             <option value='VideoGames'>Video Games</option>\n//             <option value='Clubbing'>Clubbing</option>\n//             <option value='Boating'>Boating</option>\n//             <option value='BoardGames'>Board Games</option>\n//             <option value='StudyGroups'>Study Groups</option>\n//             <option value='Other'>Other</option>\n//           </select>\n//         </div>\n//         <button type='submit'>Submit</button>\n//       </form>\n//     </>\n//   )\n// }\n// export default AddEvent\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nvar AddEvent = function AddEvent() {\n  var history = useHistory(); // so that we can redirect after the image upload is successful\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      imageLoading = _useState4[0],\n      setImageLoading = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      event_imgs = _useState6[0],\n      setImgs = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      title = _useState8[0],\n      setTitle = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      event_description = _useState10[0],\n      setDescription = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      event_date = _useState12[0],\n      setDate = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      event_city = _useState14[0],\n      setCity = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      event_state = _useState16[0],\n      setState = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      event_zipcode = _useState18[0],\n      setZip = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      category = _useState20[0],\n      setCategory = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      errors = _useState22[0],\n      setErrors = _useState22[1];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {\n      var formData, res;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              formData = new FormData();\n              formData.append(\"image\", image); // aws uploads can be a bit slow—displaying\n              // some sort of loading message is a good idea\n\n              setImageLoading(true);\n              _context.next = 6;\n              return fetch('/api/images', {\n                method: \"POST\",\n                body: formData\n              });\n\n            case 6:\n              res = _context.sent;\n\n              if (!res.ok) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 10;\n              return res.json();\n\n            case 10:\n              setImageLoading(false);\n              history.push(\"/images\");\n              _context.next = 16;\n              break;\n\n            case 14:\n              setImageLoading(false); // a real app would probably use more advanced\n              // error handling\n\n              console.log(\"error\");\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var updateImage = function updateImage(e) {\n    var file = e.target.files[0];\n    setImage(file);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: updateImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, \"Submit\"), imageLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 31\n    }\n  }, \"Loading...\"));\n};\n\nexport default AddEvent;","map":{"version":3,"names":["React","useState","useHistory","AddEvent","history","image","setImage","imageLoading","setImageLoading","event_imgs","setImgs","title","setTitle","event_description","setDescription","event_date","setDate","event_city","setCity","event_state","setState","event_zipcode","setZip","category","setCategory","errors","setErrors","handleSubmit","e","preventDefault","formData","FormData","append","fetch","method","body","res","ok","json","push","console","log","updateImage","file","target","files"],"sources":["/Users/andrewfava/Desktop/connectd/react-app/src/components/AddEvent/AddEvent.js"],"sourcesContent":["// import React, {useState} from 'react'\n// import {useDispatch, useSelector} from 'react-redux'\n// import {useHistory} from 'react-router-dom'\n\n// import {createEvent} from '../../store/event'\n\n\n\n// function AddEvent() {\n//   const user = useSelector(state => state.session)\n//   const dispatch = useDispatch()\n//   const history = useHistory()\n\n//   const [event_imgs, setImgs] = useState('')\n//   const [title, setTitle] = useState('')\n//   const [event_description, setDescription] = useState('')\n//   const [event_date, setDate] = useState('')\n//   const [event_city, setCity] = useState('')\n//   const [event_state, setState] = useState('')\n//   const [event_zipcode, setZip] = useState('')\n//   const [category, setCategory] = useState('')\n//   const [errors, setErrors] = useState([])\n\n\n//   const resetFields = () => {\n//     setImgs('')\n//     setTitle('')\n//     setDescription('')\n//     setDate('')\n//     setCity('')\n//     setState('')\n//     setZip('')\n//     setCategory('')\n//   }\n\n//   const validateEvent = () => {\n//     const errors = []\n\n//     if (!event_imgs) errors.push('Please provide a photo')\n//     if (!title) errors.push('Please provide a title')\n//     if (!event_description) errors.push('Please provide a description')\n//     if (!event_date) errors.push('Please provide a date')\n//     if (!event_city) errors.push('Please provide a city')\n//     if (!event_state) errors.push('Please provide a state')\n//     if (!event_zipcode) errors.push('Please provide a zip code')\n//     if (!category) errors.push('Please provide a category')\n\n//     setErrors(errors)\n//     return errors\n//   }\n\n//   const handleSubmit = (e) =>  {\n//     e.preventDefault()\n\n//     const errors = validateEvent()\n\n//     if(!errors.length){\n//     const event = {\n//       event_imgs,\n//       title,\n//       event_description,\n//       event_date,\n//       event_city: event_city.replace(/\\s+/g, ' ').trim().replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))),\n//       event_state: event_state.replace(/\\s+/g, ' ').trim().replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))),\n//       event_zipcode,\n//       category,\n//       user_id: user.id,\n//       // user_id:1\n//     }\n\n//     dispatch(createEvent(event))\n//     resetFields()\n//     history.push('/')\n\n//     }  else {\n//       setErrors(['Failed to create event. Please try again.'])\n//     }\n//   }\n\n\n//   return (\n//     <>\n//       <h1>Post a new Event</h1>\n//       <form onSubmit={handleSubmit}>\n//         <ul>\n//           {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n//         </ul>\n//         <div>\n//           <label>Photo Url</label>\n//           <input\n//             type='text'\n//             value={event_imgs}\n//             onChange={(e) => setImgs(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Title</label>\n//           <input\n//             type='text'\n//             value={title}\n//             onChange={(e) => setTitle(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Description</label>\n//           <input\n//             type='text'\n//             value={event_description}\n//             onChange={(e) => setDescription(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Date</label>\n//           <input\n//             type=\"date\"\n//             format=\"YYYY-MM-DD\"\n//             value={event_date}\n//             onChange={(e) => setDate(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>City</label>\n//           <input\n//             type='text'\n//             value={event_city}\n//             onChange={(e) => setCity(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>State</label>\n//           <input\n//             type='text'\n//             value={event_state}\n//             onChange={(e) => setState(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Zip</label>\n//           <input\n//             type='text'\n//             value={event_zipcode}\n//             onChange={(e) => setZip(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Category</label>\n//           <select\n//             value={category}\n//             onChange={(e) => setCategory(e.target.value)}\n//             required\n//           >\n//             <option value=''>--Please choose an option--</option>\n//             <option selected value='Sports'>Sports</option>\n//             <option value='VideoGames'>Video Games</option>\n//             <option value='Clubbing'>Clubbing</option>\n//             <option value='Boating'>Boating</option>\n//             <option value='BoardGames'>Board Games</option>\n//             <option value='StudyGroups'>Study Groups</option>\n//             <option value='Other'>Other</option>\n//           </select>\n//         </div>\n//         <button type='submit'>Submit</button>\n//       </form>\n//     </>\n//   )\n// }\n\n// export default AddEvent\n\n\nimport React, {useState} from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst AddEvent = () => {\n    const history = useHistory(); // so that we can redirect after the image upload is successful\n    \n    const [image, setImage] = useState(null);\n    const [imageLoading, setImageLoading] = useState(false);\n    const [event_imgs, setImgs] = useState('')\n    const [title, setTitle] = useState('')\n    const [event_description, setDescription] = useState('')\n    const [event_date, setDate] = useState('')\n    const [event_city, setCity] = useState('')\n    const [event_state, setState] = useState('')\n    const [event_zipcode, setZip] = useState('')\n    const [category, setCategory] = useState('')\n    const [errors, setErrors] = useState([])\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"image\", image);\n\n        // aws uploads can be a bit slow—displaying\n        // some sort of loading message is a good idea\n        setImageLoading(true);\n\n        const res = await fetch('/api/images', {\n            method: \"POST\",\n            body: formData,\n        });\n        if (res.ok) {\n            await res.json();\n            setImageLoading(false);\n            history.push(\"/images\");\n        }\n        else {\n            setImageLoading(false);\n            // a real app would probably use more advanced\n            // error handling\n            console.log(\"error\");\n        }\n    }\n\n    const updateImage = (e) => {\n        const file = e.target.files[0];\n        setImage(file);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={updateImage}\n            />\n            <button type=\"submit\">Submit</button>\n            {(imageLoading)&& <p>Loading...</p>}\n        </form>\n    )\n}\n\nexport default AddEvent;\n"],"mappings":";;;;;;+CACA,oJ;;AADA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;EACnB,IAAMC,OAAO,GAAGF,UAAU,EAA1B,CADmB,CACW;;EADX,gBAGOD,QAAQ,CAAC,IAAD,CAHf;EAAA;EAAA,IAGZI,KAHY;EAAA,IAGLC,QAHK;;EAAA,iBAIqBL,QAAQ,CAAC,KAAD,CAJ7B;EAAA;EAAA,IAIZM,YAJY;EAAA,IAIEC,eAJF;;EAAA,iBAKWP,QAAQ,CAAC,EAAD,CALnB;EAAA;EAAA,IAKZQ,UALY;EAAA,IAKAC,OALA;;EAAA,iBAMOT,QAAQ,CAAC,EAAD,CANf;EAAA;EAAA,IAMZU,KANY;EAAA,IAMLC,QANK;;EAAA,iBAOyBX,QAAQ,CAAC,EAAD,CAPjC;EAAA;EAAA,IAOZY,iBAPY;EAAA,IAOOC,cAPP;;EAAA,kBAQWb,QAAQ,CAAC,EAAD,CARnB;EAAA;EAAA,IAQZc,UARY;EAAA,IAQAC,OARA;;EAAA,kBASWf,QAAQ,CAAC,EAAD,CATnB;EAAA;EAAA,IASZgB,UATY;EAAA,IASAC,OATA;;EAAA,kBAUajB,QAAQ,CAAC,EAAD,CAVrB;EAAA;EAAA,IAUZkB,WAVY;EAAA,IAUCC,QAVD;;EAAA,kBAWanB,QAAQ,CAAC,EAAD,CAXrB;EAAA;EAAA,IAWZoB,aAXY;EAAA,IAWGC,MAXH;;EAAA,kBAYarB,QAAQ,CAAC,EAAD,CAZrB;EAAA;EAAA,IAYZsB,QAZY;EAAA,IAYFC,WAZE;;EAAA,kBAaSvB,QAAQ,CAAC,EAAD,CAbjB;EAAA;EAAA,IAaZwB,MAbY;EAAA,IAaJC,SAbI;;EAgBnB,IAAMC,YAAY;IAAA,sEAAG,iBAAOC,CAAP;MAAA;MAAA;QAAA;UAAA;YAAA;cACjBA,CAAC,CAACC,cAAF;cACMC,QAFW,GAEA,IAAIC,QAAJ,EAFA;cAGjBD,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB3B,KAAzB,EAHiB,CAKjB;cACA;;cACAG,eAAe,CAAC,IAAD,CAAf;cAPiB;cAAA,OASCyB,KAAK,CAAC,aAAD,EAAgB;gBACnCC,MAAM,EAAE,MAD2B;gBAEnCC,IAAI,EAAEL;cAF6B,CAAhB,CATN;;YAAA;cASXM,GATW;;cAAA,KAabA,GAAG,CAACC,EAbS;gBAAA;gBAAA;cAAA;;cAAA;cAAA,OAcPD,GAAG,CAACE,IAAJ,EAdO;;YAAA;cAeb9B,eAAe,CAAC,KAAD,CAAf;cACAJ,OAAO,CAACmC,IAAR,CAAa,SAAb;cAhBa;cAAA;;YAAA;cAmBb/B,eAAe,CAAC,KAAD,CAAf,CAnBa,CAoBb;cACA;;cACAgC,OAAO,CAACC,GAAR,CAAY,OAAZ;;YAtBa;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAZd,YAAY;MAAA;IAAA;EAAA,GAAlB;;EA0BA,IAAMe,WAAW,GAAG,SAAdA,WAAc,CAACd,CAAD,EAAO;IACvB,IAAMe,IAAI,GAAGf,CAAC,CAACgB,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;IACAvC,QAAQ,CAACqC,IAAD,CAAR;EACH,CAHD;;EAKA,oBACI;IAAM,QAAQ,EAAEhB,YAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IACE,IAAI,EAAC,MADP;IAEE,MAAM,EAAC,SAFT;IAGE,QAAQ,EAAEe,WAHZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAMI;IAAQ,IAAI,EAAC,QAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YANJ,EAOMnC,YAAD,iBAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAPtB,CADJ;AAWH,CA1DD;;AA4DA,eAAeJ,QAAf"},"metadata":{},"sourceType":"module"}