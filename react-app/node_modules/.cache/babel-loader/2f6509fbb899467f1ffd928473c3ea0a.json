{"ast":null,"code":"import _slicedToArray from \"/Users/andrewfava/Desktop/connectd/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/andrewfava/Desktop/connectd/react-app/src/components/AddEvent/AddEvent.js\";\n\n// import React, {useState} from 'react'\n// import {useDispatch, useSelector} from 'react-redux'\n// import {useHistory} from 'react-router-dom'\n// import {createEvent} from '../../store/event'\n// function AddEvent() {\n//   const user = useSelector(state => state.session)\n//   const dispatch = useDispatch()\n//   const history = useHistory()\n//   const [event_imgs, setImgs] = useState('')\n//   const [title, setTitle] = useState('')\n//   const [event_description, setDescription] = useState('')\n//   const [event_date, setDate] = useState('')\n//   const [event_city, setCity] = useState('')\n//   const [event_state, setState] = useState('')\n//   const [event_zipcode, setZip] = useState('')\n//   const [category, setCategory] = useState('')\n//   const [errors, setErrors] = useState([])\n//   const resetFields = () => {\n//     setImgs('')\n//     setTitle('')\n//     setDescription('')\n//     setDate('')\n//     setCity('')\n//     setState('')\n//     setZip('')\n//     setCategory('')\n//   }\n//   const validateEvent = () => {\n//     const errors = []\n//     if (!event_imgs) errors.push('Please provide a photo')\n//     if (!title) errors.push('Please provide a title')\n//     if (!event_description) errors.push('Please provide a description')\n//     if (!event_date) errors.push('Please provide a date')\n//     if (!event_city) errors.push('Please provide a city')\n//     if (!event_state) errors.push('Please provide a state')\n//     if (!event_zipcode) errors.push('Please provide a zip code')\n//     if (!category) errors.push('Please provide a category')\n//     setErrors(errors)\n//     return errors\n//   }\n//   const handleSubmit = (e) =>  {\n//     e.preventDefault()\n//     const errors = validateEvent()\n//     if(!errors.length){\n//     const event = {\n//       event_imgs,\n//       title,\n//       event_description,\n//       event_date,\n//       event_city: event_city.replace(/\\s+/g, ' ').trim().replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))),\n//       event_state: event_state.replace(/\\s+/g, ' ').trim().replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))),\n//       event_zipcode,\n//       category,\n//       user_id: user.id,\n//       // user_id:1\n//     }\n//     dispatch(createEvent(event))\n//     resetFields()\n//     history.push('/')\n//     }  else {\n//       setErrors(['Failed to create event. Please try again.'])\n//     }\n//   }\n//   return (\n//     <>\n//       <h1>Post a new Event</h1>\n//       <form onSubmit={handleSubmit}>\n//         <ul>\n//           {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n//         </ul>\n//         <div>\n//           <label>Photo Url</label>\n//           <input\n//             type='text'\n//             value={event_imgs}\n//             onChange={(e) => setImgs(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Title</label>\n//           <input\n//             type='text'\n//             value={title}\n//             onChange={(e) => setTitle(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Description</label>\n//           <input\n//             type='text'\n//             value={event_description}\n//             onChange={(e) => setDescription(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Date</label>\n//           <input\n//             type=\"date\"\n//             format=\"YYYY-MM-DD\"\n//             value={event_date}\n//             onChange={(e) => setDate(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>City</label>\n//           <input\n//             type='text'\n//             value={event_city}\n//             onChange={(e) => setCity(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>State</label>\n//           <input\n//             type='text'\n//             value={event_state}\n//             onChange={(e) => setState(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Zip</label>\n//           <input\n//             type='text'\n//             value={event_zipcode}\n//             onChange={(e) => setZip(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Category</label>\n//           <select\n//             value={category}\n//             onChange={(e) => setCategory(e.target.value)}\n//             required\n//           >\n//             <option value=''>--Please choose an option--</option>\n//             <option selected value='Sports'>Sports</option>\n//             <option value='VideoGames'>Video Games</option>\n//             <option value='Clubbing'>Clubbing</option>\n//             <option value='Boating'>Boating</option>\n//             <option value='BoardGames'>Board Games</option>\n//             <option value='StudyGroups'>Study Groups</option>\n//             <option value='Other'>Other</option>\n//           </select>\n//         </div>\n//         <button type='submit'>Submit</button>\n//       </form>\n//     </>\n//   )\n// }\n// export default AddEvent\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { createEvent } from '../../store/event';\n\nvar AddEvent = function AddEvent() {\n  var history = useHistory(); // so that we can redirect after the image upload is successful\n\n  var user = useSelector(function (state) {\n    return state.session;\n  });\n  var dispatch = useDispatch();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      event_imgs = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      imageLoading = _useState4[0],\n      setImageLoading = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      setTitle = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      event_description = _useState8[0],\n      setDescription = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      event_date = _useState10[0],\n      setDate = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      event_city = _useState12[0],\n      setCity = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      event_state = _useState14[0],\n      setState = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      event_zipcode = _useState16[0],\n      setZip = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      category = _useState18[0],\n      setCategory = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      errors = _useState20[0],\n      setErrors = _useState20[1];\n\n  var resetFields = function resetFields() {\n    setImage(null);\n    setTitle(\"\");\n    setDescription(\"\");\n    setDate(\"\");\n    setCity(\"\");\n    setState(\"\");\n    setZip(\"\");\n    setCategory(\"\");\n  }; // const updateImage = (e) => {\n  //     const file = e.target.files[0];\n  //     setImage(file);\n  // }\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, \"Post a new Event\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, \"Add a photo\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: function onChange(e) {\n      return setImage(e.target.files[0]);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: title,\n    onChange: function onChange(e) {\n      return setTitle(e.target.value);\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: event_description,\n    onChange: function onChange(e) {\n      return setDescription(e.target.value);\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    format: \"YYYY-MM-DD\",\n    value: event_date,\n    onChange: function onChange(e) {\n      return setDate(e.target.value);\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: event_city,\n    onChange: function onChange(e) {\n      return setCity(e.target.value);\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: event_state,\n    onChange: function onChange(e) {\n      return setState(e.target.value);\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 15\n    }\n  }, \"Zip\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: event_zipcode,\n    onChange: function onChange(e) {\n      return setZip(e.target.value);\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: category,\n    onChange: function onChange(e) {\n      return setCategory(e.target.value);\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 17\n    }\n  }, \"--Please choose an option--\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Sports\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }\n  }, \"Sports\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"VideoGames\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }\n  }, \"Video Games\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Clubbing\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 17\n    }\n  }, \"Clubbing\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Boating\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }\n  }, \"Boating\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"BoardGames\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 17\n    }\n  }, \"Board Games\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"StudyGroups\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 17\n    }\n  }, \"Study Groups\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Other\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }\n  }, \"Other\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }\n  }, \"Submit\"), imageLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 31\n    }\n  }, \"Loading...\")));\n};\n\nexport default AddEvent;","map":{"version":3,"names":["React","useState","useDispatch","useSelector","useHistory","createEvent","AddEvent","history","user","state","session","dispatch","event_imgs","setImage","imageLoading","setImageLoading","title","setTitle","event_description","setDescription","event_date","setDate","event_city","setCity","event_state","setState","event_zipcode","setZip","category","setCategory","errors","setErrors","resetFields","handleSubmit","e","target","files","value"],"sources":["/Users/andrewfava/Desktop/connectd/react-app/src/components/AddEvent/AddEvent.js"],"sourcesContent":["// import React, {useState} from 'react'\n// import {useDispatch, useSelector} from 'react-redux'\n// import {useHistory} from 'react-router-dom'\n\n// import {createEvent} from '../../store/event'\n\n\n\n// function AddEvent() {\n//   const user = useSelector(state => state.session)\n//   const dispatch = useDispatch()\n//   const history = useHistory()\n\n//   const [event_imgs, setImgs] = useState('')\n//   const [title, setTitle] = useState('')\n//   const [event_description, setDescription] = useState('')\n//   const [event_date, setDate] = useState('')\n//   const [event_city, setCity] = useState('')\n//   const [event_state, setState] = useState('')\n//   const [event_zipcode, setZip] = useState('')\n//   const [category, setCategory] = useState('')\n//   const [errors, setErrors] = useState([])\n\n\n//   const resetFields = () => {\n//     setImgs('')\n//     setTitle('')\n//     setDescription('')\n//     setDate('')\n//     setCity('')\n//     setState('')\n//     setZip('')\n//     setCategory('')\n//   }\n\n//   const validateEvent = () => {\n//     const errors = []\n\n//     if (!event_imgs) errors.push('Please provide a photo')\n//     if (!title) errors.push('Please provide a title')\n//     if (!event_description) errors.push('Please provide a description')\n//     if (!event_date) errors.push('Please provide a date')\n//     if (!event_city) errors.push('Please provide a city')\n//     if (!event_state) errors.push('Please provide a state')\n//     if (!event_zipcode) errors.push('Please provide a zip code')\n//     if (!category) errors.push('Please provide a category')\n\n//     setErrors(errors)\n//     return errors\n//   }\n\n//   const handleSubmit = (e) =>  {\n//     e.preventDefault()\n\n//     const errors = validateEvent()\n\n//     if(!errors.length){\n//     const event = {\n//       event_imgs,\n//       title,\n//       event_description,\n//       event_date,\n//       event_city: event_city.replace(/\\s+/g, ' ').trim().replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))),\n//       event_state: event_state.replace(/\\s+/g, ' ').trim().replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))),\n//       event_zipcode,\n//       category,\n//       user_id: user.id,\n//       // user_id:1\n//     }\n\n//     dispatch(createEvent(event))\n//     resetFields()\n//     history.push('/')\n\n//     }  else {\n//       setErrors(['Failed to create event. Please try again.'])\n//     }\n//   }\n\n\n//   return (\n//     <>\n//       <h1>Post a new Event</h1>\n//       <form onSubmit={handleSubmit}>\n//         <ul>\n//           {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n//         </ul>\n//         <div>\n//           <label>Photo Url</label>\n//           <input\n//             type='text'\n//             value={event_imgs}\n//             onChange={(e) => setImgs(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Title</label>\n//           <input\n//             type='text'\n//             value={title}\n//             onChange={(e) => setTitle(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Description</label>\n//           <input\n//             type='text'\n//             value={event_description}\n//             onChange={(e) => setDescription(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Date</label>\n//           <input\n//             type=\"date\"\n//             format=\"YYYY-MM-DD\"\n//             value={event_date}\n//             onChange={(e) => setDate(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>City</label>\n//           <input\n//             type='text'\n//             value={event_city}\n//             onChange={(e) => setCity(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>State</label>\n//           <input\n//             type='text'\n//             value={event_state}\n//             onChange={(e) => setState(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Zip</label>\n//           <input\n//             type='text'\n//             value={event_zipcode}\n//             onChange={(e) => setZip(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Category</label>\n//           <select\n//             value={category}\n//             onChange={(e) => setCategory(e.target.value)}\n//             required\n//           >\n//             <option value=''>--Please choose an option--</option>\n//             <option selected value='Sports'>Sports</option>\n//             <option value='VideoGames'>Video Games</option>\n//             <option value='Clubbing'>Clubbing</option>\n//             <option value='Boating'>Boating</option>\n//             <option value='BoardGames'>Board Games</option>\n//             <option value='StudyGroups'>Study Groups</option>\n//             <option value='Other'>Other</option>\n//           </select>\n//         </div>\n//         <button type='submit'>Submit</button>\n//       </form>\n//     </>\n//   )\n// }\n\n// export default AddEvent\n\n\nimport React, {useState} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {useHistory} from 'react-router-dom'\n\nimport {createEvent} from '../../store/event'\n\n\nconst AddEvent = () => {\n    const history = useHistory(); // so that we can redirect after the image upload is successful\n    const user = useSelector(state => state.session)\n    const dispatch = useDispatch()\n\n\n    const [event_imgs, setImage] = useState(null);\n    const [imageLoading, setImageLoading] = useState(false);\n    const [title, setTitle] = useState(\"\")\n    const [event_description, setDescription] = useState(\"\")\n    const [event_date, setDate] = useState(\"\")\n    const [event_city, setCity] = useState(\"\")\n    const [event_state, setState] = useState(\"\")\n    const [event_zipcode, setZip] = useState(\"\")\n    const [category, setCategory] = useState(\"\")\n    const [errors, setErrors] = useState([])\n\n\n    const resetFields = () => {\n        setImage(null)\n        setTitle(\"\")\n        setDescription(\"\")\n        setDate(\"\")\n        setCity(\"\")\n        setState(\"\")\n        setZip(\"\")\n        setCategory(\"\")\n    }\n\n    \n\n\n\n\n\n\n    // const updateImage = (e) => {\n    //     const file = e.target.files[0];\n    //     setImage(file);\n    // }\n\n    return (\n      <>\n        <h1>Post a new Event</h1>\n        <form onSubmit={handleSubmit}>\n          <label>Add a photo</label>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={(e) => setImage(e.target.files[0])}\n            />\n            <div>\n              <label>Title</label>\n              <input\n                type='text'\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                required\n              />\n            </div>\n            <div>\n              <label>Description</label>\n              <input\n                type='text'\n                value={event_description}\n                onChange={(e) => setDescription(e.target.value)}\n                required\n              />\n            </div>\n            <div>\n              <label>Date</label>\n              <input\n                type=\"date\"\n                format=\"YYYY-MM-DD\"\n                value={event_date}\n                onChange={(e) => setDate(e.target.value)}\n                required\n              />\n            </div>\n            <div>\n              <label>City</label>\n              <input\n                type='text'\n                value={event_city}\n                onChange={(e) => setCity(e.target.value)}\n                required\n              />\n            </div>\n            <div>\n              <label>State</label>\n              <input\n                type='text'\n                value={event_state}\n                onChange={(e) => setState(e.target.value)}\n                required\n              />\n            </div>\n            <div>\n              <label>Zip</label>\n              <input\n                type='text'\n                value={event_zipcode}\n                onChange={(e) => setZip(e.target.value)}\n                required\n              />\n            </div>\n            <div>\n              <label>Category</label>\n              <select\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n                required\n              >\n                <option value=''>--Please choose an option--</option>\n                <option value='Sports'>Sports</option>\n                <option value='VideoGames'>Video Games</option>\n                <option value='Clubbing'>Clubbing</option>\n                <option value='Boating'>Boating</option>\n                <option value='BoardGames'>Board Games</option>\n                <option value='StudyGroups'>Study Groups</option>\n                <option value='Other'>Other</option>\n              </select>\n            </div>\n            <button type=\"submit\">Submit</button>\n            {(imageLoading)&& <p>Loading...</p>}\n        </form>\n        </>\n    )\n}\n\nexport default AddEvent;\n"],"mappings":";;;;;AAAA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AAEA,SAAQC,WAAR,QAA0B,mBAA1B;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;EACnB,IAAMC,OAAO,GAAGH,UAAU,EAA1B,CADmB,CACW;;EAC9B,IAAMI,IAAI,GAAGL,WAAW,CAAC,UAAAM,KAAK;IAAA,OAAIA,KAAK,CAACC,OAAV;EAAA,CAAN,CAAxB;EACA,IAAMC,QAAQ,GAAGT,WAAW,EAA5B;;EAHmB,gBAMYD,QAAQ,CAAC,IAAD,CANpB;EAAA;EAAA,IAMZW,UANY;EAAA,IAMAC,Q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"},"metadata":{},"sourceType":"module"}